动态代理
在静态代理中目标类很多时候，可以使用动态代理，避免静态代理的缺点。
动态代理中目标类即使很多，1、代理类数量可以很少 ， 2、当你修改了接口中的方法时，不会影响代理类。
动态代理：在程序执行过程中，使用jdk的反射机制，创建代理类对象，并动态的指定要代理目标类
换句话说：动态代理是一种创建java对象的能力，让你不用创建TaoBao类，就能创建代理类对象。

什么是动态代理？
使用jdk的反射机制，创建对象的能力，创建的是代理类的对象。而不用你创建类文件。不用写java文件。
动态：在程序执行时，调用jdk提供的方法才能创建代理类的对象。

动态代理的实现：
1、jdk动态代理（理解）：使用java反射包中的类和接口实现动态代理的功能。
    反射包 java.lang,reflect,里面有三个类：InvocationHandler,Method,Proxy.
2、cglib动态代理（了解）：cglib是第三方的工具库，创建代理对象。
        cglib的原理是继承，cglib通过继承目标类，创建它的子类，在子类中重写父类中同名的方法，实现功能的修改

        因为cglib是继承，重写方法，所以要求目标类不能是final的，方法也不能是final的。cglib的要求目标类比较宽松，只要
        能继承就可以了。cglib在很多框架中使用，比如mybatis，spring框架中都有使用。

实现动态代理的步骤：
1、创建接口，定义目标类要完成的功能
2、创建目标类实现接口
3、创建InvocationHandler接口的实现类，在invoke方法中完成代理类的功能
    1、调用目标方法
    2、增强功能

思维导图：https://www.processon.com/mindmap/5ee78dfd6376891e81cda344